#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Web_DB")]
public partial class LtoSqlDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Insertuser_detail(user_detail instance);
  partial void Updateuser_detail(user_detail instance);
  partial void Deleteuser_detail(user_detail instance);
  partial void Insertpost(post instance);
  partial void Updatepost(post instance);
  partial void Deletepost(post instance);
  partial void Insertcomment(comment instance);
  partial void Updatecomment(comment instance);
  partial void Deletecomment(comment instance);
  partial void Insertfriend(friend instance);
  partial void Updatefriend(friend instance);
  partial void Deletefriend(friend instance);
  partial void Insertlike(like instance);
  partial void Updatelike(like instance);
  partial void Deletelike(like instance);
  partial void Insertmessage(message instance);
  partial void Updatemessage(message instance);
  partial void Deletemessage(message instance);
  partial void Insertnotification(notification instance);
  partial void Updatenotification(notification instance);
  partial void Deletenotification(notification instance);
  #endregion
	
	public LtoSqlDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Web_DBConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public LtoSqlDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LtoSqlDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LtoSqlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LtoSqlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<user_detail> user_details
	{
		get
		{
			return this.GetTable<user_detail>();
		}
	}
	
	public System.Data.Linq.Table<post> posts
	{
		get
		{
			return this.GetTable<post>();
		}
	}
	
	public System.Data.Linq.Table<comment> comments
	{
		get
		{
			return this.GetTable<comment>();
		}
	}
	
	public System.Data.Linq.Table<friend> friends
	{
		get
		{
			return this.GetTable<friend>();
		}
	}
	
	public System.Data.Linq.Table<like> likes
	{
		get
		{
			return this.GetTable<like>();
		}
	}
	
	public System.Data.Linq.Table<message> messages
	{
		get
		{
			return this.GetTable<message>();
		}
	}
	
	public System.Data.Linq.Table<notification> notifications
	{
		get
		{
			return this.GetTable<notification>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.user_details")]
public partial class user_detail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _name;
	
	private string _email;
	
	private string _pass;
	
	private string _gender;
	
	private string _addr;
	
	private string _proimg;
	
	private string _about;
	
	private string _country;
	
	private string _secq;
	
	private string _seca;
	
	private EntitySet<post> _posts;
	
	private EntitySet<comment> _comments;
	
	private EntitySet<friend> _friends;
	
	private EntitySet<friend> _friends1;
	
	private EntitySet<like> _likes;
	
	private EntitySet<message> _messages;
	
	private EntitySet<message> _messages1;
	
	private EntitySet<notification> _notifications;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnaddrChanging(string value);
    partial void OnaddrChanged();
    partial void OnproimgChanging(string value);
    partial void OnproimgChanged();
    partial void OnaboutChanging(string value);
    partial void OnaboutChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OnsecqChanging(string value);
    partial void OnsecqChanged();
    partial void OnsecaChanging(string value);
    partial void OnsecaChanged();
    #endregion
	
	public user_detail()
	{
		this._posts = new EntitySet<post>(new Action<post>(this.attach_posts), new Action<post>(this.detach_posts));
		this._comments = new EntitySet<comment>(new Action<comment>(this.attach_comments), new Action<comment>(this.detach_comments));
		this._friends = new EntitySet<friend>(new Action<friend>(this.attach_friends), new Action<friend>(this.detach_friends));
		this._friends1 = new EntitySet<friend>(new Action<friend>(this.attach_friends1), new Action<friend>(this.detach_friends1));
		this._likes = new EntitySet<like>(new Action<like>(this.attach_likes), new Action<like>(this.detach_likes));
		this._messages = new EntitySet<message>(new Action<message>(this.attach_messages), new Action<message>(this.detach_messages));
		this._messages1 = new EntitySet<message>(new Action<message>(this.attach_messages1), new Action<message>(this.detach_messages1));
		this._notifications = new EntitySet<notification>(new Action<notification>(this.attach_notifications), new Action<notification>(this.detach_notifications));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string pass
	{
		get
		{
			return this._pass;
		}
		set
		{
			if ((this._pass != value))
			{
				this.OnpassChanging(value);
				this.SendPropertyChanging();
				this._pass = value;
				this.SendPropertyChanged("pass");
				this.OnpassChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string gender
	{
		get
		{
			return this._gender;
		}
		set
		{
			if ((this._gender != value))
			{
				this.OngenderChanging(value);
				this.SendPropertyChanging();
				this._gender = value;
				this.SendPropertyChanged("gender");
				this.OngenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addr", DbType="VarChar(255)")]
	public string addr
	{
		get
		{
			return this._addr;
		}
		set
		{
			if ((this._addr != value))
			{
				this.OnaddrChanging(value);
				this.SendPropertyChanging();
				this._addr = value;
				this.SendPropertyChanged("addr");
				this.OnaddrChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proimg", DbType="VarChar(MAX)")]
	public string proimg
	{
		get
		{
			return this._proimg;
		}
		set
		{
			if ((this._proimg != value))
			{
				this.OnproimgChanging(value);
				this.SendPropertyChanging();
				this._proimg = value;
				this.SendPropertyChanged("proimg");
				this.OnproimgChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_about", DbType="VarChar(MAX)")]
	public string about
	{
		get
		{
			return this._about;
		}
		set
		{
			if ((this._about != value))
			{
				this.OnaboutChanging(value);
				this.SendPropertyChanging();
				this._about = value;
				this.SendPropertyChanged("about");
				this.OnaboutChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string country
	{
		get
		{
			return this._country;
		}
		set
		{
			if ((this._country != value))
			{
				this.OncountryChanging(value);
				this.SendPropertyChanging();
				this._country = value;
				this.SendPropertyChanged("country");
				this.OncountryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secq", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string secq
	{
		get
		{
			return this._secq;
		}
		set
		{
			if ((this._secq != value))
			{
				this.OnsecqChanging(value);
				this.SendPropertyChanging();
				this._secq = value;
				this.SendPropertyChanged("secq");
				this.OnsecqChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seca", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string seca
	{
		get
		{
			return this._seca;
		}
		set
		{
			if ((this._seca != value))
			{
				this.OnsecaChanging(value);
				this.SendPropertyChanging();
				this._seca = value;
				this.SendPropertyChanged("seca");
				this.OnsecaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_detail_post", Storage="_posts", ThisKey="email", OtherKey="user_id")]
	public EntitySet<post> posts
	{
		get
		{
			return this._posts;
		}
		set
		{
			this._posts.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_detail_comment", Storage="_comments", ThisKey="email", OtherKey="user_id")]
	public EntitySet<comment> comments
	{
		get
		{
			return this._comments;
		}
		set
		{
			this._comments.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_detail_friend", Storage="_friends", ThisKey="email", OtherKey="receiver_id")]
	public EntitySet<friend> friends
	{
		get
		{
			return this._friends;
		}
		set
		{
			this._friends.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_detail_friend1", Storage="_friends1", ThisKey="email", OtherKey="sender_id")]
	public EntitySet<friend> friends1
	{
		get
		{
			return this._friends1;
		}
		set
		{
			this._friends1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_detail_like", Storage="_likes", ThisKey="email", OtherKey="user_id")]
	public EntitySet<like> likes
	{
		get
		{
			return this._likes;
		}
		set
		{
			this._likes.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_detail_message", Storage="_messages", ThisKey="email", OtherKey="from_id")]
	public EntitySet<message> messages
	{
		get
		{
			return this._messages;
		}
		set
		{
			this._messages.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_detail_message1", Storage="_messages1", ThisKey="email", OtherKey="to_id")]
	public EntitySet<message> messages1
	{
		get
		{
			return this._messages1;
		}
		set
		{
			this._messages1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_detail_notification", Storage="_notifications", ThisKey="email", OtherKey="user_id")]
	public EntitySet<notification> notifications
	{
		get
		{
			return this._notifications;
		}
		set
		{
			this._notifications.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_posts(post entity)
	{
		this.SendPropertyChanging();
		entity.user_detail = this;
	}
	
	private void detach_posts(post entity)
	{
		this.SendPropertyChanging();
		entity.user_detail = null;
	}
	
	private void attach_comments(comment entity)
	{
		this.SendPropertyChanging();
		entity.user_detail = this;
	}
	
	private void detach_comments(comment entity)
	{
		this.SendPropertyChanging();
		entity.user_detail = null;
	}
	
	private void attach_friends(friend entity)
	{
		this.SendPropertyChanging();
		entity.user_detail = this;
	}
	
	private void detach_friends(friend entity)
	{
		this.SendPropertyChanging();
		entity.user_detail = null;
	}
	
	private void attach_friends1(friend entity)
	{
		this.SendPropertyChanging();
		entity.user_detail1 = this;
	}
	
	private void detach_friends1(friend entity)
	{
		this.SendPropertyChanging();
		entity.user_detail1 = null;
	}
	
	private void attach_likes(like entity)
	{
		this.SendPropertyChanging();
		entity.user_detail = this;
	}
	
	private void detach_likes(like entity)
	{
		this.SendPropertyChanging();
		entity.user_detail = null;
	}
	
	private void attach_messages(message entity)
	{
		this.SendPropertyChanging();
		entity.user_detail = this;
	}
	
	private void detach_messages(message entity)
	{
		this.SendPropertyChanging();
		entity.user_detail = null;
	}
	
	private void attach_messages1(message entity)
	{
		this.SendPropertyChanging();
		entity.user_detail1 = this;
	}
	
	private void detach_messages1(message entity)
	{
		this.SendPropertyChanging();
		entity.user_detail1 = null;
	}
	
	private void attach_notifications(notification entity)
	{
		this.SendPropertyChanging();
		entity.user_detail = this;
	}
	
	private void detach_notifications(notification entity)
	{
		this.SendPropertyChanging();
		entity.user_detail = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.posts")]
public partial class post : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _post_Id;
	
	private string _user_id;
	
	private string _data;
	
	private string _time;
	
	private string _date;
	
	private EntitySet<comment> _comments;
	
	private EntitySet<like> _likes;
	
	private EntityRef<user_detail> _user_detail;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpost_IdChanging(int value);
    partial void Onpost_IdChanged();
    partial void Onuser_idChanging(string value);
    partial void Onuser_idChanged();
    partial void OndataChanging(string value);
    partial void OndataChanged();
    partial void OntimeChanging(string value);
    partial void OntimeChanged();
    partial void OndateChanging(string value);
    partial void OndateChanged();
    #endregion
	
	public post()
	{
		this._comments = new EntitySet<comment>(new Action<comment>(this.attach_comments), new Action<comment>(this.detach_comments));
		this._likes = new EntitySet<like>(new Action<like>(this.attach_likes), new Action<like>(this.detach_likes));
		this._user_detail = default(EntityRef<user_detail>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int post_Id
	{
		get
		{
			return this._post_Id;
		}
		set
		{
			if ((this._post_Id != value))
			{
				this.Onpost_IdChanging(value);
				this.SendPropertyChanging();
				this._post_Id = value;
				this.SendPropertyChanged("post_Id");
				this.Onpost_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string user_id
	{
		get
		{
			return this._user_id;
		}
		set
		{
			if ((this._user_id != value))
			{
				if (this._user_detail.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onuser_idChanging(value);
				this.SendPropertyChanging();
				this._user_id = value;
				this.SendPropertyChanged("user_id");
				this.Onuser_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string data
	{
		get
		{
			return this._data;
		}
		set
		{
			if ((this._data != value))
			{
				this.OndataChanging(value);
				this.SendPropertyChanging();
				this._data = value;
				this.SendPropertyChanged("data");
				this.OndataChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string time
	{
		get
		{
			return this._time;
		}
		set
		{
			if ((this._time != value))
			{
				this.OntimeChanging(value);
				this.SendPropertyChanging();
				this._time = value;
				this.SendPropertyChanged("time");
				this.OntimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string date
	{
		get
		{
			return this._date;
		}
		set
		{
			if ((this._date != value))
			{
				this.OndateChanging(value);
				this.SendPropertyChanging();
				this._date = value;
				this.SendPropertyChanged("date");
				this.OndateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="post_comment", Storage="_comments", ThisKey="post_Id", OtherKey="post_id")]
	public EntitySet<comment> comments
	{
		get
		{
			return this._comments;
		}
		set
		{
			this._comments.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="post_like", Storage="_likes", ThisKey="post_Id", OtherKey="post_id")]
	public EntitySet<like> likes
	{
		get
		{
			return this._likes;
		}
		set
		{
			this._likes.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_detail_post", Storage="_user_detail", ThisKey="user_id", OtherKey="email", IsForeignKey=true)]
	public user_detail user_detail
	{
		get
		{
			return this._user_detail.Entity;
		}
		set
		{
			user_detail previousValue = this._user_detail.Entity;
			if (((previousValue != value) 
						|| (this._user_detail.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._user_detail.Entity = null;
					previousValue.posts.Remove(this);
				}
				this._user_detail.Entity = value;
				if ((value != null))
				{
					value.posts.Add(this);
					this._user_id = value.email;
				}
				else
				{
					this._user_id = default(string);
				}
				this.SendPropertyChanged("user_detail");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_comments(comment entity)
	{
		this.SendPropertyChanging();
		entity.post = this;
	}
	
	private void detach_comments(comment entity)
	{
		this.SendPropertyChanging();
		entity.post = null;
	}
	
	private void attach_likes(like entity)
	{
		this.SendPropertyChanging();
		entity.post = this;
	}
	
	private void detach_likes(like entity)
	{
		this.SendPropertyChanging();
		entity.post = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.comment")]
public partial class comment : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _comment_Id;
	
	private int _post_id;
	
	private string _user_id;
	
	private string _data;
	
	private string _time;
	
	private string _date;
	
	private EntityRef<post> _post;
	
	private EntityRef<user_detail> _user_detail;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncomment_IdChanging(int value);
    partial void Oncomment_IdChanged();
    partial void Onpost_idChanging(int value);
    partial void Onpost_idChanged();
    partial void Onuser_idChanging(string value);
    partial void Onuser_idChanged();
    partial void OndataChanging(string value);
    partial void OndataChanged();
    partial void OntimeChanging(string value);
    partial void OntimeChanged();
    partial void OndateChanging(string value);
    partial void OndateChanged();
    #endregion
	
	public comment()
	{
		this._post = default(EntityRef<post>);
		this._user_detail = default(EntityRef<user_detail>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int comment_Id
	{
		get
		{
			return this._comment_Id;
		}
		set
		{
			if ((this._comment_Id != value))
			{
				this.Oncomment_IdChanging(value);
				this.SendPropertyChanging();
				this._comment_Id = value;
				this.SendPropertyChanged("comment_Id");
				this.Oncomment_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_id", DbType="Int NOT NULL")]
	public int post_id
	{
		get
		{
			return this._post_id;
		}
		set
		{
			if ((this._post_id != value))
			{
				if (this._post.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onpost_idChanging(value);
				this.SendPropertyChanging();
				this._post_id = value;
				this.SendPropertyChanged("post_id");
				this.Onpost_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string user_id
	{
		get
		{
			return this._user_id;
		}
		set
		{
			if ((this._user_id != value))
			{
				if (this._user_detail.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onuser_idChanging(value);
				this.SendPropertyChanging();
				this._user_id = value;
				this.SendPropertyChanged("user_id");
				this.Onuser_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string data
	{
		get
		{
			return this._data;
		}
		set
		{
			if ((this._data != value))
			{
				this.OndataChanging(value);
				this.SendPropertyChanging();
				this._data = value;
				this.SendPropertyChanged("data");
				this.OndataChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string time
	{
		get
		{
			return this._time;
		}
		set
		{
			if ((this._time != value))
			{
				this.OntimeChanging(value);
				this.SendPropertyChanging();
				this._time = value;
				this.SendPropertyChanged("time");
				this.OntimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string date
	{
		get
		{
			return this._date;
		}
		set
		{
			if ((this._date != value))
			{
				this.OndateChanging(value);
				this.SendPropertyChanging();
				this._date = value;
				this.SendPropertyChanged("date");
				this.OndateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="post_comment", Storage="_post", ThisKey="post_id", OtherKey="post_Id", IsForeignKey=true)]
	public post post
	{
		get
		{
			return this._post.Entity;
		}
		set
		{
			post previousValue = this._post.Entity;
			if (((previousValue != value) 
						|| (this._post.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._post.Entity = null;
					previousValue.comments.Remove(this);
				}
				this._post.Entity = value;
				if ((value != null))
				{
					value.comments.Add(this);
					this._post_id = value.post_Id;
				}
				else
				{
					this._post_id = default(int);
				}
				this.SendPropertyChanged("post");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_detail_comment", Storage="_user_detail", ThisKey="user_id", OtherKey="email", IsForeignKey=true)]
	public user_detail user_detail
	{
		get
		{
			return this._user_detail.Entity;
		}
		set
		{
			user_detail previousValue = this._user_detail.Entity;
			if (((previousValue != value) 
						|| (this._user_detail.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._user_detail.Entity = null;
					previousValue.comments.Remove(this);
				}
				this._user_detail.Entity = value;
				if ((value != null))
				{
					value.comments.Add(this);
					this._user_id = value.email;
				}
				else
				{
					this._user_id = default(string);
				}
				this.SendPropertyChanged("user_detail");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.friends")]
public partial class friend : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _friend_Id;
	
	private string _sender_id;
	
	private string _receiver_id;
	
	private byte _status;
	
	private byte _notify;
	
	private EntityRef<user_detail> _user_detail;
	
	private EntityRef<user_detail> _user_detail1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onfriend_IdChanging(int value);
    partial void Onfriend_IdChanged();
    partial void Onsender_idChanging(string value);
    partial void Onsender_idChanged();
    partial void Onreceiver_idChanging(string value);
    partial void Onreceiver_idChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    partial void OnnotifyChanging(byte value);
    partial void OnnotifyChanged();
    #endregion
	
	public friend()
	{
		this._user_detail = default(EntityRef<user_detail>);
		this._user_detail1 = default(EntityRef<user_detail>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_friend_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int friend_Id
	{
		get
		{
			return this._friend_Id;
		}
		set
		{
			if ((this._friend_Id != value))
			{
				this.Onfriend_IdChanging(value);
				this.SendPropertyChanging();
				this._friend_Id = value;
				this.SendPropertyChanged("friend_Id");
				this.Onfriend_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sender_id", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string sender_id
	{
		get
		{
			return this._sender_id;
		}
		set
		{
			if ((this._sender_id != value))
			{
				if (this._user_detail1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onsender_idChanging(value);
				this.SendPropertyChanging();
				this._sender_id = value;
				this.SendPropertyChanged("sender_id");
				this.Onsender_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiver_id", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string receiver_id
	{
		get
		{
			return this._receiver_id;
		}
		set
		{
			if ((this._receiver_id != value))
			{
				if (this._user_detail.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onreceiver_idChanging(value);
				this.SendPropertyChanging();
				this._receiver_id = value;
				this.SendPropertyChanged("receiver_id");
				this.Onreceiver_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
	public byte status
	{
		get
		{
			return this._status;
		}
		set
		{
			if ((this._status != value))
			{
				this.OnstatusChanging(value);
				this.SendPropertyChanging();
				this._status = value;
				this.SendPropertyChanged("status");
				this.OnstatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notify", DbType="TinyInt NOT NULL")]
	public byte notify
	{
		get
		{
			return this._notify;
		}
		set
		{
			if ((this._notify != value))
			{
				this.OnnotifyChanging(value);
				this.SendPropertyChanging();
				this._notify = value;
				this.SendPropertyChanged("notify");
				this.OnnotifyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_detail_friend", Storage="_user_detail", ThisKey="receiver_id", OtherKey="email", IsForeignKey=true)]
	public user_detail user_detail
	{
		get
		{
			return this._user_detail.Entity;
		}
		set
		{
			user_detail previousValue = this._user_detail.Entity;
			if (((previousValue != value) 
						|| (this._user_detail.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._user_detail.Entity = null;
					previousValue.friends.Remove(this);
				}
				this._user_detail.Entity = value;
				if ((value != null))
				{
					value.friends.Add(this);
					this._receiver_id = value.email;
				}
				else
				{
					this._receiver_id = default(string);
				}
				this.SendPropertyChanged("user_detail");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_detail_friend1", Storage="_user_detail1", ThisKey="sender_id", OtherKey="email", IsForeignKey=true)]
	public user_detail user_detail1
	{
		get
		{
			return this._user_detail1.Entity;
		}
		set
		{
			user_detail previousValue = this._user_detail1.Entity;
			if (((previousValue != value) 
						|| (this._user_detail1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._user_detail1.Entity = null;
					previousValue.friends1.Remove(this);
				}
				this._user_detail1.Entity = value;
				if ((value != null))
				{
					value.friends1.Add(this);
					this._sender_id = value.email;
				}
				else
				{
					this._sender_id = default(string);
				}
				this.SendPropertyChanged("user_detail1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.likes")]
public partial class like : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _post_id;
	
	private string _user_id;
	
	private EntityRef<post> _post;
	
	private EntityRef<user_detail> _user_detail;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpost_idChanging(int value);
    partial void Onpost_idChanged();
    partial void Onuser_idChanging(string value);
    partial void Onuser_idChanged();
    #endregion
	
	public like()
	{
		this._post = default(EntityRef<post>);
		this._user_detail = default(EntityRef<user_detail>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int post_id
	{
		get
		{
			return this._post_id;
		}
		set
		{
			if ((this._post_id != value))
			{
				if (this._post.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onpost_idChanging(value);
				this.SendPropertyChanging();
				this._post_id = value;
				this.SendPropertyChanged("post_id");
				this.Onpost_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string user_id
	{
		get
		{
			return this._user_id;
		}
		set
		{
			if ((this._user_id != value))
			{
				if (this._user_detail.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onuser_idChanging(value);
				this.SendPropertyChanging();
				this._user_id = value;
				this.SendPropertyChanged("user_id");
				this.Onuser_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="post_like", Storage="_post", ThisKey="post_id", OtherKey="post_Id", IsForeignKey=true)]
	public post post
	{
		get
		{
			return this._post.Entity;
		}
		set
		{
			post previousValue = this._post.Entity;
			if (((previousValue != value) 
						|| (this._post.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._post.Entity = null;
					previousValue.likes.Remove(this);
				}
				this._post.Entity = value;
				if ((value != null))
				{
					value.likes.Add(this);
					this._post_id = value.post_Id;
				}
				else
				{
					this._post_id = default(int);
				}
				this.SendPropertyChanged("post");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_detail_like", Storage="_user_detail", ThisKey="user_id", OtherKey="email", IsForeignKey=true)]
	public user_detail user_detail
	{
		get
		{
			return this._user_detail.Entity;
		}
		set
		{
			user_detail previousValue = this._user_detail.Entity;
			if (((previousValue != value) 
						|| (this._user_detail.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._user_detail.Entity = null;
					previousValue.likes.Remove(this);
				}
				this._user_detail.Entity = value;
				if ((value != null))
				{
					value.likes.Add(this);
					this._user_id = value.email;
				}
				else
				{
					this._user_id = default(string);
				}
				this.SendPropertyChanged("user_detail");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.messages")]
public partial class message : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _msg_Id;
	
	private string _from_id;
	
	private string _to_id;
	
	private string _msg;
	
	private string _time;
	
	private string _date;
	
	private System.Nullable<int> _read;
	
	private EntityRef<user_detail> _user_detail;
	
	private EntityRef<user_detail> _user_detail1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmsg_IdChanging(int value);
    partial void Onmsg_IdChanged();
    partial void Onfrom_idChanging(string value);
    partial void Onfrom_idChanged();
    partial void Onto_idChanging(string value);
    partial void Onto_idChanged();
    partial void OnmsgChanging(string value);
    partial void OnmsgChanged();
    partial void OntimeChanging(string value);
    partial void OntimeChanged();
    partial void OndateChanging(string value);
    partial void OndateChanged();
    partial void OnreadChanging(System.Nullable<int> value);
    partial void OnreadChanged();
    #endregion
	
	public message()
	{
		this._user_detail = default(EntityRef<user_detail>);
		this._user_detail1 = default(EntityRef<user_detail>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msg_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int msg_Id
	{
		get
		{
			return this._msg_Id;
		}
		set
		{
			if ((this._msg_Id != value))
			{
				this.Onmsg_IdChanging(value);
				this.SendPropertyChanging();
				this._msg_Id = value;
				this.SendPropertyChanged("msg_Id");
				this.Onmsg_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_from_id", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string from_id
	{
		get
		{
			return this._from_id;
		}
		set
		{
			if ((this._from_id != value))
			{
				if (this._user_detail.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfrom_idChanging(value);
				this.SendPropertyChanging();
				this._from_id = value;
				this.SendPropertyChanged("from_id");
				this.Onfrom_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_to_id", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string to_id
	{
		get
		{
			return this._to_id;
		}
		set
		{
			if ((this._to_id != value))
			{
				if (this._user_detail1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onto_idChanging(value);
				this.SendPropertyChanging();
				this._to_id = value;
				this.SendPropertyChanged("to_id");
				this.Onto_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msg", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string msg
	{
		get
		{
			return this._msg;
		}
		set
		{
			if ((this._msg != value))
			{
				this.OnmsgChanging(value);
				this.SendPropertyChanging();
				this._msg = value;
				this.SendPropertyChanged("msg");
				this.OnmsgChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string time
	{
		get
		{
			return this._time;
		}
		set
		{
			if ((this._time != value))
			{
				this.OntimeChanging(value);
				this.SendPropertyChanging();
				this._time = value;
				this.SendPropertyChanged("time");
				this.OntimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string date
	{
		get
		{
			return this._date;
		}
		set
		{
			if ((this._date != value))
			{
				this.OndateChanging(value);
				this.SendPropertyChanging();
				this._date = value;
				this.SendPropertyChanged("date");
				this.OndateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[read]", Storage="_read", DbType="Int")]
	public System.Nullable<int> read
	{
		get
		{
			return this._read;
		}
		set
		{
			if ((this._read != value))
			{
				this.OnreadChanging(value);
				this.SendPropertyChanging();
				this._read = value;
				this.SendPropertyChanged("read");
				this.OnreadChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_detail_message", Storage="_user_detail", ThisKey="from_id", OtherKey="email", IsForeignKey=true)]
	public user_detail user_detail
	{
		get
		{
			return this._user_detail.Entity;
		}
		set
		{
			user_detail previousValue = this._user_detail.Entity;
			if (((previousValue != value) 
						|| (this._user_detail.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._user_detail.Entity = null;
					previousValue.messages.Remove(this);
				}
				this._user_detail.Entity = value;
				if ((value != null))
				{
					value.messages.Add(this);
					this._from_id = value.email;
				}
				else
				{
					this._from_id = default(string);
				}
				this.SendPropertyChanged("user_detail");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_detail_message1", Storage="_user_detail1", ThisKey="to_id", OtherKey="email", IsForeignKey=true)]
	public user_detail user_detail1
	{
		get
		{
			return this._user_detail1.Entity;
		}
		set
		{
			user_detail previousValue = this._user_detail1.Entity;
			if (((previousValue != value) 
						|| (this._user_detail1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._user_detail1.Entity = null;
					previousValue.messages1.Remove(this);
				}
				this._user_detail1.Entity = value;
				if ((value != null))
				{
					value.messages1.Add(this);
					this._to_id = value.email;
				}
				else
				{
					this._to_id = default(string);
				}
				this.SendPropertyChanged("user_detail1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.notifications")]
public partial class notification : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _user_id;
	
	private string _nottext;
	
	private string _link;
	
	private System.Nullable<int> _read;
	
	private EntityRef<user_detail> _user_detail;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Onuser_idChanging(string value);
    partial void Onuser_idChanged();
    partial void OnnottextChanging(string value);
    partial void OnnottextChanged();
    partial void OnlinkChanging(string value);
    partial void OnlinkChanged();
    partial void OnreadChanging(System.Nullable<int> value);
    partial void OnreadChanged();
    #endregion
	
	public notification()
	{
		this._user_detail = default(EntityRef<user_detail>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="VarChar(100)")]
	public string user_id
	{
		get
		{
			return this._user_id;
		}
		set
		{
			if ((this._user_id != value))
			{
				if (this._user_detail.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onuser_idChanging(value);
				this.SendPropertyChanging();
				this._user_id = value;
				this.SendPropertyChanged("user_id");
				this.Onuser_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nottext", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string nottext
	{
		get
		{
			return this._nottext;
		}
		set
		{
			if ((this._nottext != value))
			{
				this.OnnottextChanging(value);
				this.SendPropertyChanging();
				this._nottext = value;
				this.SendPropertyChanged("nottext");
				this.OnnottextChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link", DbType="VarChar(MAX)")]
	public string link
	{
		get
		{
			return this._link;
		}
		set
		{
			if ((this._link != value))
			{
				this.OnlinkChanging(value);
				this.SendPropertyChanging();
				this._link = value;
				this.SendPropertyChanged("link");
				this.OnlinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[read]", Storage="_read", DbType="Int")]
	public System.Nullable<int> read
	{
		get
		{
			return this._read;
		}
		set
		{
			if ((this._read != value))
			{
				this.OnreadChanging(value);
				this.SendPropertyChanging();
				this._read = value;
				this.SendPropertyChanged("read");
				this.OnreadChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_detail_notification", Storage="_user_detail", ThisKey="user_id", OtherKey="email", IsForeignKey=true, DeleteRule="CASCADE")]
	public user_detail user_detail
	{
		get
		{
			return this._user_detail.Entity;
		}
		set
		{
			user_detail previousValue = this._user_detail.Entity;
			if (((previousValue != value) 
						|| (this._user_detail.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._user_detail.Entity = null;
					previousValue.notifications.Remove(this);
				}
				this._user_detail.Entity = value;
				if ((value != null))
				{
					value.notifications.Add(this);
					this._user_id = value.email;
				}
				else
				{
					this._user_id = default(string);
				}
				this.SendPropertyChanged("user_detail");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
